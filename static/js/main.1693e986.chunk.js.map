{"version":3,"sources":["App.module.css","components/gameField/lineInField/cell/Cell.module.css","reportWebVitals.js","redux/mainReducer.js","redux/keyPressReducer.js","redux/store.js","components/gameField/lineInField/GetAnimationEffect.js","components/gameField/lineInField/cell/Cell.jsx","components/gameField/lineInField/cell/CellContainer.jsx","components/gameField/lineInField/LineInField.jsx","components/gameField/GameField.jsx","components/gameField/GameFieldContainer.jsx","redux/animationLogic.js","redux/getScoreOfMatrixes.js","redux/logic.js","components/testMassive.js","redux/gameOver.js","components/LineInGame.jsx","components/LineInGameContainer.jsx","App.js","AppC.jsx","index.js","components/LineInGame.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ANIME","RESET_ALL","ANIME_RESET_EFFECT","SET_CURRENT_STATE","newGameState","oneRaw","one","value","anime","two","three","four","twoRaw","threeRaw","fourRaw","score","bestScore","localStorage","getItem","initialState","JSON","parse","ACResetAnimation","type","mainReducer","state","action","newState","LEFT","RIGHT","UP","DOWN","NULL","ADD_SCORE","key","actionCreatorLeft","actionCreatorRight","actionCreatorUP","actionCreatorDown","keyPressReducer","reducers","combineReducers","main","keysState","store","createStore","window","SLIDE","s","slide","SLIDE_2","slide2","SLIDE_3","slide3","SLIDE_6","slide6","SLIDE_7","slide7","SLIDE_8","slide8","SLIDE_10","slide10","SLIDE_11","slide11","SLIDE_12","slide12","SLIDE_14","slide14","SLIDE_15","slide15","SLIDE_16","slide16","MINI","mini","SLIDE_0","slide0","APPEARANCE","appearance","Cell","an","changed","effect","getAnimationEffect","this","props","animation","className","lineInGameStyles","cellStyle","val","cellStyles","styleOfCell","zero","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","console","log","Math","log2","getColor","p","React","Component","connect","dispatch","resetAnimation","LineInField","rowStyle","CellContainer","currentRow","timeout","GameField","bodyField","shiftRowGetAnimationOnePhase","row","shiftRowGetAnimationTwoPhase","getScoreOfMatrixes","newAnimationMatrix","oldMatrixValue","massiveOldAnimation","getMassiveOnMatrix","massiveOldMatrixValue","massiveOfDoubleTheValue","forEach","index","push","x","getMatrixOnState","rowSlide","thisRow","shiftRow","compare2Num","a","b","oneAndTwo","twoAndThree","threeAndFour","comparisonOfCentralMembers","pairwiseComparison","getLeftRowsOutMatrix","matrix","getDownRowsOutMatrix","getUnDownRowsOutMatrix","getUpRowsOutMatrix","getUnUpRowsOutMatrix","gluingMatrix","valMatrix","animeMatrix","addNewPlayingPiece","currentMatrix","matrixMassive","counter","nullsIndexMassive","currentValue","rndNull","floor","random","nullIndex","newValuesMatrix","getMatrixOnMassive","oldAnimations","getAnimationMatrixOnState","animationsMatrixMassive","massive","Object","entries","map","cV","shift","isNullAnimation","animationMatrix","result","testMassive","y","z","c","youWin","isWinner","matrixOnState","gameOver","isGameOver","matrixOfState","massiveR","massiveL","massiveU","massiveD","j","i","LineInGame","startTicker","bind","magic","setNewStateAndNewAnimation","setNullAnimation","keyFunction","setNewScore","setNewBestScore","step","pressingLock","keys","rotateMatrix","oldAnimationMatrixRight","oldAnimationMatrix","oldMatrixOldAnimation","slideRotateMatrix","unRotateMatrix","newAnimationNewMatrix","newMatrixNewAnimationPlusNewPlayingPiece","oneState","twoState","newMatrixNewAnimation","fromEntries","event","keyCode","preventDefault","setState","down","up","left","right","document","title","addEventListener","removeEventListener","setNull","ticker","setInterval","twoStates","States","setTimeout","setCurrentValueAndSlideAnimation","nS","setCurrentState","setItem","stringify","next","magicFunction","head","button","onClick","reset","bb","input","readOnly","GameFieldContainer","footer2","footer","winner2","winner","ACSetCurrentState","setScore","actionCreatorAddScore","App","canvasRef","useRef","msgBoxRef","useEffect","msgBox","current","touchStart","touchPosition","TouchStart","e","changedTouches","clientX","clientY","TouchMove","TouchEnd","color","d","msg","abs","innerText","CheckAction","ref","canvas","style","overflowY","LineInGameContainer","ReactDOM","render","AppC","getElementById"],"mappings":"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","file":"static/js/main.1693e986.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"App_canvas__pZzp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"zero\":\"Cell_zero__23vdn\",\"one\":\"Cell_one__2hS4u\",\"two\":\"Cell_two__FDvJp\",\"three\":\"Cell_three__Oclt7\",\"four\":\"Cell_four__3Tq4A\",\"five\":\"Cell_five__3jKig\",\"six\":\"Cell_six__3WSN4\",\"seven\":\"Cell_seven__1Qxv0\",\"eight\":\"Cell_eight__2AmMK\",\"nine\":\"Cell_nine__2ZCfV\",\"ten\":\"Cell_ten__8itMP\",\"eleven\":\"Cell_eleven__1tdOj\",\"twelve\":\"Cell_twelve__K1jNb\",\"thirteen\":\"Cell_thirteen__2vNbs\",\"fourteen\":\"Cell_fourteen__ebWLQ\",\"fifteen\":\"Cell_fifteen__2w7fY\",\"sixteen\":\"Cell_sixteen__219VP\",\"slideAndDissolution\":\"Cell_slideAndDissolution__333Vn\",\"slide0\":\"Cell_slide0__TYr_G\",\"slide\":\"Cell_slide__1giBT\",\"slide2\":\"Cell_slide2__2Oywb\",\"slide3\":\"Cell_slide3__2LX5U\",\"mini\":\"Cell_mini__3EL3r\",\"appearance\":\"Cell_appearance__3r7Wa\",\"unSlide\":\"Cell_unSlide__1pxgC\",\"slide6\":\"Cell_slide6__tW9xd\",\"slide7\":\"Cell_slide7__2o70I\",\"slide8\":\"Cell_slide8__AkGbF\",\"slide10\":\"Cell_slide10__1TF2E\",\"slide11\":\"Cell_slide11__1OESH\",\"slide12\":\"Cell_slide12__3aqTx\",\"slide14\":\"Cell_slide14__16gfE\",\"slide15\":\"Cell_slide15__2Tmxq\",\"slide16\":\"Cell_slide16__qhZ7n\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const ANIME = 'anime';\r\nconst RESET_ALL = 'reset';\r\nconst ANIME_RESET_EFFECT = 'resetEffect';\r\nconst SET_CURRENT_STATE = 'setCurrentState';\r\n\r\nlet newGameState={\r\n    oneRaw: {\r\n        one: {value: 2, anime: 0},\r\n        two: {value: 0, anime: 0},\r\n        three: {value: 0, anime: 0},\r\n        four: {value: 0, anime: 0}\r\n    },\r\n    twoRaw: {\r\n        one: {value: 0, anime: 0},\r\n        two: {value: 0, anime: 0},\r\n        three: {value: 0, anime: 0},\r\n        four: {value: 0, anime: 0}\r\n    },\r\n    threeRaw: {\r\n        one: {value: 0, anime: 0},\r\n        two: {value: 0, anime: 0},\r\n        three: {value: 0, anime: 0},\r\n        four: {value: 0, anime: 0}\r\n    },\r\n    fourRaw: {\r\n        one: {value: 0, anime: 0},\r\n        two: {value: 0, anime: 0},\r\n        three: {value: 0, anime: 0},\r\n        four: {value: 0, anime: 0}\r\n    },\r\n    score: 0,\r\n    bestScore: localStorage.getItem('bestScore') ? localStorage.getItem('bestScore') : 0,\r\n}\r\nlet initialState=JSON.parse(localStorage.getItem('main'))?JSON.parse(localStorage.getItem('main')):newGameState\r\n\r\nlet mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ANIME: {\r\n            return {\r\n                ...state,\r\n                oneRaw: {\r\n                    one: {value: 2, anime: 1},\r\n                    two: {value: 2, anime: 1},\r\n                    three: {value: 2, anime: 0},\r\n                    four: {value: 4, anime: 0}\r\n                },\r\n                twoRaw: {\r\n                    one: {value: 32, anime: 1},\r\n                    two: {value: 64, anime: 1},\r\n                    three: {value: 64, anime: 0},\r\n                    four: {value: 128, anime: 0}\r\n                },\r\n                threeRaw: {\r\n                    one: {value: 256, anime: 0},\r\n                    two: {value: 512, anime: 0},\r\n                    three: {value: 1024, anime: 0},\r\n                    four: {value: 2048, anime: 0}\r\n                },\r\n                fourRaw: {\r\n                    one: {value: 8192, anime: 0},\r\n                    two: {value: 16384, anime: 0},\r\n                    three: {value: 32768, anime: 0},\r\n                    four: {value: 65536, anime: 0}\r\n                }\r\n            }\r\n        }\r\n        case RESET_ALL: {\r\n            return {\r\n                ...newGameState,\r\n                bestScore: localStorage.getItem('bestScore') ? localStorage.getItem('bestScore') : 0\r\n            }\r\n        }\r\n        case ANIME_RESET_EFFECT: {\r\n            return {\r\n                ...state,\r\n                oneRaw: {\r\n                    one: {value: state.oneRaw.one.value, anime: 0},\r\n                    two: {value: state.oneRaw.two.value, anime: 0},\r\n                    three: {value: state.oneRaw.three.value, anime: 0},\r\n                    four: {value: state.oneRaw.four.value, anime: 0}\r\n                }, twoRaw: {\r\n                    one: {value: state.twoRaw.one.value, anime: 0},\r\n                    two: {value: state.twoRaw.two.value, anime: 0},\r\n                    three: {value: state.twoRaw.three.value, anime: 0},\r\n                    four: {value: state.twoRaw.four.value, anime: 0}\r\n                }, threeRaw: {\r\n                    one: {value: state.threeRaw.one.value, anime: 0},\r\n                    two: {value: state.threeRaw.two.value, anime: 0},\r\n                    three: {value: state.threeRaw.three.value, anime: 0},\r\n                    four: {value: state.threeRaw.four.value, anime: 0}\r\n                }, fourRaw: {\r\n                    one: {value: state.fourRaw.one.value, anime: 0},\r\n                    two: {value: state.fourRaw.two.value, anime: 0},\r\n                    three: {value: state.fourRaw.three.value, anime: 0},\r\n                    four: {value: state.fourRaw.four.value, anime: 0}\r\n                }\r\n            }\r\n        }\r\n        case SET_CURRENT_STATE: {\r\n            return{\r\n                ...state,\r\n                oneRaw: {\r\n                    one: {value: action.newState.oneRaw.one.value, anime: action.newState.oneRaw.one.anime},\r\n                    two: {value: action.newState.oneRaw.two.value, anime: action.newState.oneRaw.two.anime},\r\n                    three: {value: action.newState.oneRaw.three.value, anime: action.newState.oneRaw.three.anime},\r\n                    four: {value: action.newState.oneRaw.four.value, anime: action.newState.oneRaw.four.anime}\r\n                },\r\n                twoRaw: {\r\n                    one: {value: action.newState.twoRaw.one.value, anime: action.newState.twoRaw.one.anime},\r\n                    two: {value: action.newState.twoRaw.two.value, anime: action.newState.twoRaw.two.anime},\r\n                    three: {value: action.newState.twoRaw.three.value, anime: action.newState.twoRaw.three.anime},\r\n                    four: {value: action.newState.twoRaw.four.value, anime: action.newState.twoRaw.four.anime}\r\n                },\r\n                threeRaw: {\r\n                    one: {value: action.newState.threeRaw.one.value, anime: action.newState.threeRaw.one.anime},\r\n                    two: {value: action.newState.threeRaw.two.value, anime: action.newState.threeRaw.two.anime},\r\n                    three: {value: action.newState.threeRaw.three.value, anime: action.newState.threeRaw.three.anime},\r\n                    four: {value: action.newState.threeRaw.four.value, anime: action.newState.threeRaw.four.anime}\r\n                },\r\n                fourRaw: {\r\n                    one: {value: action.newState.fourRaw.one.value, anime: action.newState.fourRaw.one.anime},\r\n                    two: {value: action.newState.fourRaw.two.value, anime: action.newState.fourRaw.two.anime},\r\n                    three: {value: action.newState.fourRaw.three.value, anime: action.newState.fourRaw.three.anime},\r\n                    four: {value: action.newState.fourRaw.four.value, anime: action.newState.fourRaw.four.anime}\r\n                },\r\n                score: action.newState.score,\r\n                bestScore: action.newState.bestScore\r\n            }\r\n        }\r\n\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\nexport const ACSetAnimation = () => ({type: ANIME})\r\nexport const ACResetState = () => ({type: RESET_ALL})\r\nexport const ACResetAnimation = () => ({type: ANIME_RESET_EFFECT})\r\nexport const ACSetCurrentState = (newState) => ({type: SET_CURRENT_STATE, newState: newState})\r\n\r\nexport default mainReducer;"," const LEFT = 'left';\r\n const RIGHT = 'right';\r\n const UP = 'up';\r\n const DOWN = 'down';\r\n const NULL= 'null';\r\n const ADD_SCORE= 'score'\r\n\r\n\r\nlet initialState = {\r\n    key: null,\r\n    score: 0\r\n}\r\nlet keyPressReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LEFT: {\r\n            return{\r\n                ...state, key: LEFT\r\n            }\r\n        }\r\n        case RIGHT: {\r\n            return{\r\n                ...state, key: RIGHT\r\n            }\r\n        }\r\n        case UP: {\r\n            return{\r\n                ...state, key: UP\r\n            }\r\n        }\r\n        case DOWN: {\r\n            return{\r\n                ...state, key: DOWN\r\n            }\r\n        }\r\n        case NULL: {\r\n            return{\r\n                ...state, key: null\r\n            }\r\n        }\r\n        case ADD_SCORE: {\r\n            return{\r\n                ...state, score: state.score+action.score\r\n            }\r\n        }\r\n        default :\r\n            return initialState\r\n\r\n    }\r\n}\r\nexport const actionCreatorLeft = () => ({type: LEFT})\r\nexport const actionCreatorRight = () => ({type: RIGHT})\r\nexport const actionCreatorUP = () => ({type: UP})\r\nexport const actionCreatorDown = () => ({type: DOWN})\r\nexport const actionCreatorNull = () => ({type: NULL})\r\nexport const actionCreatorAddScore = (score) => ({type:ADD_SCORE,score:score })\r\n\r\n\r\nexport default keyPressReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport mainReducer from \"./mainReducer\";\r\nimport keyPressReducer from \"./keyPressReducer\";\r\n\r\nlet reducers=combineReducers({\r\n    main: mainReducer,\r\n    keysState: keyPressReducer\r\n})\r\nlet store=createStore(reducers);\r\n\r\nwindow.store= store;\r\n\r\nexport default store;","import s from \"./cell/Cell.module.css\"\r\nconst SLIDE = s.slide\r\nconst SLIDE_2 = s.slide2\r\nconst SLIDE_3 = s.slide3\r\n// FROM LEFT\r\nconst SLIDE_6 = s.slide6\r\nconst SLIDE_7 = s.slide7\r\nconst SLIDE_8 = s.slide8\r\n// FROM UP\r\nconst SLIDE_10 = s.slide10\r\nconst SLIDE_11 = s.slide11\r\nconst SLIDE_12 = s.slide12\r\n//FROM DOWN\r\nconst SLIDE_14 = s.slide14\r\nconst SLIDE_15 = s.slide15\r\nconst SLIDE_16 = s.slide16\r\n//FROM ALL\r\nconst MINI=s.mini\r\nconst SLIDE_0=s.slide0\r\nconst APPEARANCE=s.appearance\r\nexport let getAnimationEffect = (value) => {\r\n    switch (value) {\r\n        case 0: {\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_0\r\n            }\r\n        }\r\n        case 1: {\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE\r\n            }\r\n        }\r\n        case 2: {\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_2\r\n            }\r\n        }\r\n        case 3:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_3\r\n            }\r\n        }\r\n        case 4:{\r\n            return {\r\n                changed: true,\r\n                effect: MINI\r\n            }\r\n        }\r\n        // FROM LEFT METHOD\r\n        case 5:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_0\r\n            }\r\n        }case 6:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_6\r\n            }\r\n        }case 7:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_7\r\n            }\r\n        }case 8:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_8\r\n            }\r\n        }\r\n        // FROM UP METHODS\r\n        case 9:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_0\r\n            }\r\n        }case 10:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_10\r\n            }\r\n        }case 11:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_11\r\n            }\r\n        }case 12:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_12\r\n            }\r\n        }\r\n        // FROM DOWN METHODS\r\n        case 13:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_0\r\n            }\r\n        }case 14:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_14\r\n            }\r\n        }case 15:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_15\r\n            }\r\n        }case 16:{\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_16\r\n            }\r\n        }case 44:{\r\n            return {\r\n                changed: true,\r\n                effect: APPEARANCE\r\n            }\r\n        }\r\n        default :\r\n            return {\r\n                changed: true,\r\n                effect: SLIDE_0\r\n            }\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport lineInGameStyles from \"../../../LineInGame.module.css\";\r\nimport styleOfCell from \"./Cell.module.css\"\r\nimport {getAnimationEffect} from \"../GetAnimationEffect\";\r\n\r\n\r\nclass Cell extends React.Component {\r\n\r\n\r\n    render() {\r\n        let getColor = (val) => {\r\n            const cellStyles = [styleOfCell.zero,\r\n                styleOfCell.one, styleOfCell.two,\r\n                styleOfCell.three, styleOfCell.four,\r\n                styleOfCell.five, styleOfCell.six,\r\n                styleOfCell.seven, styleOfCell.eight,\r\n                styleOfCell.nine, styleOfCell.ten,\r\n                styleOfCell.eleven, styleOfCell.twelve,\r\n                styleOfCell.thirteen, styleOfCell.fourteen,\r\n                styleOfCell.fifteen, styleOfCell.sixteen];\r\n            console.log('value= ' + val + ' getColor return a:' + cellStyles[Math.log2(val)])\r\n            return cellStyles[Math.log2(val)];\r\n        }\r\n        let an = getAnimationEffect(this.props.animation)\r\n        return (\r\n            <div className={`${lineInGameStyles.cellStyle} ${getColor(this.props.value)}\r\n            ${an.changed && an.effect} `}>\r\n                <p className={lineInGameStyles.p}>{(this.props.value) ? this.props.value : null}</p></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cell\r\n","import {connect} from \"react-redux\";\r\nimport Cell from \"./Cell\";\r\nimport {ACResetAnimation} from \"../../../../redux/mainReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        resetAnimation: () => dispatch(ACResetAnimation()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cell)","import React from \"react\";\r\nimport s from '../../LineInGame.module.css'\r\nimport CellContainer from \"./cell/CellContainer\";\r\n\r\nconst LineInField = (props) => {\r\n    return (<div className={s.rowStyle}>\r\n        <CellContainer value={props.currentRow.one.value}\r\n                       animation={props.currentRow.one.anime}\r\n                       timeout={props.currentRow.one.timeout}/>\r\n        <CellContainer value={props.currentRow.two.value}\r\n                       animation={props.currentRow.two.anime}\r\n                       timeout={props.currentRow.two.timeout}/>\r\n        <CellContainer value={props.currentRow.three.value}\r\n                       animation={props.currentRow.three.anime}\r\n                       timeout={props.currentRow.four.timeout}/>\r\n        <CellContainer value={props.currentRow.four.value}\r\n                       animation={props.currentRow.four.anime}\r\n                       timeout={props.currentRow.four.timeout}/>\r\n    </div>)\r\n}\r\nexport default LineInField","import s from \"../LineInGame.module.css\";\r\nimport React from \"react\";\r\nimport LineInField from \"./lineInField/LineInField\";\r\n\r\n\r\nclass GameField extends React.Component {\r\n\r\n    render() {\r\n        return (<div className={s.bodyField}>\r\n                <LineInField currentRow={this.props.state.oneRaw}/>\r\n                <LineInField currentRow={this.props.state.twoRaw}/>\r\n                <LineInField currentRow={this.props.state.threeRaw}/>\r\n                <LineInField currentRow={this.props.state.fourRaw}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default GameField","import {connect} from \"react-redux\";\r\nimport GameField from \"./GameField\";\r\nimport {ACResetAnimation} from \"../../redux/mainReducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.main,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        resetAnimation: ()=>dispatch(ACResetAnimation()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameField)","//todo  сделай по принципу logic.js LEFT, RIGHT, UP, DOWN\r\n//Возвращает строку анимаций полученную из того что дали\r\nexport let shiftRowGetAnimationOnePhase=(row)=> {\r\n\r\n    let thisAnimeRow = {\r\n        one: 0, two: 0, three: 0, four: 0\r\n    }\r\n        //{x,0,0,0}\r\n    if ((row.one !== 0) && (row.two === 0) && (row.four === 0) && (row.three === 0)) {\r\n        // console.log(' распознал ситуацию как {x,0,0,0}')\r\n        thisAnimeRow = {\r\n            one: 3, two: 0, three: 0, four: 0\r\n        }\r\n    }\r\n    // {0,0,0,0}\r\n    else if ((row.one === 0) && (row.two === 0) && (row.four === 0) && (row.three === 0)){\r\n        // console.log(' распознал ситуацию как {0,0,0,0}')\r\n        thisAnimeRow={one:0, two: 0, three: 0, four: 0 }\r\n    }// {0,0,0,x}\r\n    else if ((row.one === 0) && (row.two === 0) && (row.four !== 0) && (row.three === 0)){\r\n        // console.log('распознал ситуацию как {0,0,0,x}')\r\n        thisAnimeRow={one:0, two: 0, three: 0, four: 0 }\r\n    }\r\n    //{0,x,0,0}\r\n    else if((row.two!==0)&&(row.one===0)&&(row.three===0)&&(row.four===0)){\r\n        // console.log('распознал ситуацию как {0,x,0,0}')\r\n        thisAnimeRow={\r\n            one:0, two: 2, three:0, four: 0\r\n        }\r\n        //{x,x,0,0}\r\n    }else if ((row.one!==0)&&(row.two!==0)&&(row.four === 0) && (row.three === 0)) {\r\n        // console.log('распознал ситуацию как {x,x,0,0}')\r\n        if(row.one===row.two){\r\n            thisAnimeRow={\r\n                one: 3, two: 2, three: 0, four: 0\r\n            }\r\n        }else{\r\n            thisAnimeRow = {\r\n                one: 2, two: 2, three: 0, four: 0\r\n            }\r\n        }\r\n\r\n        //{x,0,0,x}\r\n    } else if ((row.one!==0)&&(row.four!==0)&&(row.two === 0) && (row.three === 0)) {\r\n        // console.log('распознал ситуацию как {x,0,0,x}')\r\n        if(row.one===row.four){\r\n            thisAnimeRow = {\r\n            one: 3, two: 0, three: 0, four: 0\r\n        }\r\n        }else{\r\n            thisAnimeRow = {\r\n                one: 2, two: 0, three: 0, four: 0\r\n            }\r\n        }\r\n        //{0,0,x,0}\r\n    }else if((row.three!==0)&&(row.one===0)&&(row.two===0)&&(row.four===0)){\r\n        // console.log('распознал ситуацию как {0,0,x,0}')\r\n        thisAnimeRow = {\r\n            one: 0, two: 0, three: 1, four: 0\r\n        }\r\n        //{x,0,x,0}\r\n    } else if ((row.one!==0)&&(row.two === 0)&&(row.three!==0) && (row.four === 0)) {\r\n        // console.log('распознал ситуацию как {x,0,x,0}')\r\n        if(row.one===row.three){thisAnimeRow = {\r\n            one: 3, two: 0, three: 1, four: 0\r\n        }}else{\r\n            thisAnimeRow = {\r\n                one: 2, two: 0, three: 1, four: 0\r\n            }\r\n        }\r\n        //{x,x,x,0}\r\n    } else if ((row.one !== 0)&&(row.two !== 0)&&(row.three !== 0)&&(row.four === 0)) {\r\n        // console.log('распознал ситуацию как {x,x,x,0}')\r\n        if(row.two===row.three){\r\n            thisAnimeRow = {\r\n                one: 2, two: 2, three: 1, four: 0\r\n            }\r\n        }else if(row.one===row.two){\r\n            thisAnimeRow = {\r\n                one: 2, two: 1, three: 1, four: 0\r\n            }\r\n        }else{\r\n            thisAnimeRow = {\r\n                one: 1, two: 1, three: 1, four: 0\r\n            }\r\n        }\r\n        //{x,x,0,x}\r\n    } else if ((row.one!==0)&&(row.two!==0)&&(row.four!==0)&&(row.three === 0)) {\r\n        // console.log('распознал ситуацию как {x,x,0,x}')\r\n        if(row.four===row.two) {\r\n            thisAnimeRow = {\r\n                one: 2, two: 2, three: 0, four: 0\r\n            }\r\n        }else if(row.one===row.two){\r\n                thisAnimeRow = {\r\n                    one: 2, two: 1, three: 0, four: 0\r\n                }\r\n            }else {\r\n            thisAnimeRow = {\r\n                one: 1, two: 1, three: 0, four: 0\r\n            }\r\n        }\r\n        //{x,0,x,x}\r\n    } else if ((row.one!==0)&&(row.three!==0)&&(row.four!==0)&&(row.two === 0)) {\r\n        // console.log('распознал ситуацию как {x,0,x,x}')\r\n        if(row.three===row.four){\r\n            thisAnimeRow = {\r\n                one: 2, two: 0, three: 1, four: 0\r\n            }\r\n        }else if(row.one===row.three){\r\n            thisAnimeRow = {\r\n                one: 2, two: 0, three: 0, four: 0\r\n            }\r\n        }else{\r\n            thisAnimeRow = {\r\n            one: 1, two: 0, three: 0, four: 0\r\n            }\r\n        }\r\n        //{0,0,x,x}\r\n    }else if(((row.one===0)&&(row.two===0)&&(row.three!==0)&&(row.four!==0))){\r\n        // console.log('распознал ситуацию как {0,0,x,x}')\r\n        if(row.three===row.four) {\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 1, four: 0\r\n            }\r\n        }else{\r\n                thisAnimeRow = {one: 0, two: 0, three: 0, four: 0}\r\n            }\r\n        //{0,x,0,x}\r\n    }else if((row.one===0)&&(row.two!==0)&&(row.three===0)&&(row.four!==0)){\r\n        // console.log('распознал ситуацию как {0,x,0,x}')\r\n        if(row.two===row.four){\r\n            thisAnimeRow= {one: 0, two: 2, three: 0, four: 0}\r\n        }else{\r\n            thisAnimeRow= {one: 0, two: 1, three: 0, four: 0}\r\n        }\r\n        //{0,x,x,0}\r\n    }else if((row.one===0)&&(row.two!==0)&&(row.three !==0)&&(row.four===0)){\r\n        // console.log('распознал ситуацию как {0,x,x,0}')\r\n        if(row.two===row.three ){\r\n            //спорный вопрос как разрешить эту анимацию\r\n            thisAnimeRow= {one: 0, two: 2, three: 1, four: 0}\r\n        }else {\r\n            thisAnimeRow= {one: 0, two: 1, three: 1, four: 0}\r\n        }\r\n        //{0,x,x,x}\r\n    }else if((row.one===0)&&(row.two!==0)&&(row.three !==0)&&(row.four!==0)){\r\n        // console.log('распознал ситуацию как {0,x,x,x}')\r\n        if(row.three===row.four){\r\n            thisAnimeRow= {one: 0, two: 1, three: 1, four: 0}\r\n        }else if(row.two===row.three){\r\n            thisAnimeRow= {one: 0, two: 1, three: 0, four: 0}\r\n        }else{\r\n            thisAnimeRow= {one: 0, two: 0, three: 0, four: 0}\r\n        }\r\n        //{x,x,x,x}\r\n    } else {\r\n        // console.log('распознал ситуацию как {x,x,x,x}')\r\n        if((row.one===row.two)&&(row.three===row.four)){\r\n            thisAnimeRow = {one: 2, two: 1, three: 1, four: 0}\r\n        }else if(row.three===row.four){\r\n            thisAnimeRow = {one: 1, two: 1, three: 1, four: 0}\r\n        }else if(row.three===row.two){\r\n            thisAnimeRow = {one: 1, two: 1, three: 0, four: 0}\r\n        }\r\n        else if(row.two===row.one){\r\n            thisAnimeRow = {one: 1, two: 0, three: 0, four: 0}\r\n        }else{\r\n            thisAnimeRow = {one: 0, two: 0, three: 0, four: 0}\r\n        }\r\n    }\r\n    return thisAnimeRow\r\n}\r\n// for result state usability\r\n// входная строка  OLD !!!\r\nexport let shiftRowGetAnimationTwoPhase=(row)=> {\r\n\r\n    let thisAnimeRow = {\r\n        one: 0, two: 0, three: 0, four: 0\r\n    }\r\n    //{x,0,0,0}\r\n    if ((row.one !== 0) && (row.two === 0) && (row.four === 0) && (row.three === 0)) {\r\n        // console.log('two phase распознал ситуацию как {x,0,0,0}')\r\n        thisAnimeRow = {\r\n            one: 0, two: 0, three: 0, four: 0\r\n        }\r\n    }\r\n    // {0,0,0,0}\r\n    else if ((row.one === 0) && (row.two === 0) && (row.four === 0) && (row.three === 0)){\r\n        // console.log('two phase распознал ситуацию как {0,0,0,0}')\r\n        thisAnimeRow={one:0, two: 0, three: 0, four: 0 }\r\n    }// {0,0,0,x}\r\n    else if ((row.one === 0) && (row.two === 0) && (row.four !== 0) && (row.three === 0)){\r\n        // console.log('two phase распознал ситуацию как {0,0,0,x}')\r\n        thisAnimeRow={one:0, two: 0, three: 0, four: 0 }\r\n    }\r\n    //{0,x,0,0}\r\n    else if((row.two!==0)&&(row.one===0)&&(row.three===0)&&(row.four===0)){\r\n        // console.log(' two phase распознал ситуацию как {0,x,0,0}')\r\n        thisAnimeRow={\r\n            one:0, two: 0, three:0, four: 0\r\n        }\r\n        //{x,x,0,0}\r\n    }else if ((row.one!==0)&&(row.two!==0)&&(row.four === 0) && (row.three === 0)) {\r\n        // console.log('two phase распознал ситуацию как {x,x,0,0}')\r\n        if(row.one===row.two){\r\n            thisAnimeRow={\r\n                one: 0, two: 0, three: 0, four: 4\r\n            }\r\n        }else{\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 0\r\n            }\r\n        }\r\n\r\n        //{x,0,0,x}\r\n    } else if ((row.one!==0)&&(row.four!==0)&&(row.two === 0) && (row.three === 0)) {\r\n        // console.log('two phase распознал ситуацию как {x,0,0,x}')\r\n        if(row.one===row.four){\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 4\r\n            }\r\n        }else{\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 0\r\n            }\r\n        }\r\n        //{0,0,x,0}\r\n    }else if((row.three!==0)&&(row.one===0)&&(row.two===0)&&(row.four===0)){\r\n        // console.log('two phase распознал ситуацию как {0,0,x,0}')\r\n        thisAnimeRow = {\r\n            one: 0, two: 0, three: 0, four: 0\r\n        }\r\n        //{x,0,x,0}\r\n    } else if ((row.one!==0)&&(row.two === 0)&&(row.three!==0) && (row.four === 0)) {\r\n        // console.log('two phase распознал ситуацию как {x,0,x,0}')\r\n        if(row.one===row.three){thisAnimeRow = {\r\n            one: 0, two: 0, three: 0, four: 4\r\n        }}else{\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 0\r\n            }\r\n        }\r\n        //{x,x,x,0}\r\n    } else if ((row.one !== 0)&&(row.two !== 0)&&(row.three !== 0)&&(row.four === 0)) {\r\n        // console.log('two phase распознал ситуацию как {x,x,x,0}')\r\n        if(row.two===row.three){\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 4\r\n            }\r\n        }else if(row.one===row.two){\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 4, four: 0\r\n            }\r\n        }else{\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 0\r\n            }\r\n        }\r\n        //{x,x,0,x}\r\n    } else if ((row.one!==0)&&(row.two!==0)&&(row.four!==0)&&(row.three === 0)) {\r\n        // console.log('two phase распознал ситуацию как {x,x,0,x}')\r\n        if(row.four===row.two) {\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 4\r\n            }\r\n        }else if(row.one===row.two){\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 4, four: 0\r\n            }\r\n        }else {\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 0\r\n            }\r\n        }\r\n        //{x,0,x,x}\r\n    } else if ((row.one!==0)&&(row.three!==0)&&(row.four!==0)&&(row.two === 0)) {\r\n        //  console.log('two phase распознал ситуацию как {x,0,x,x}')\r\n        if(row.three===row.four){\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 4\r\n            }\r\n        }else if(row.one===row.three){\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 4, four: 0\r\n            }\r\n        }else{\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 0\r\n            }\r\n        }\r\n        //{0,0,x,x}\r\n    }else if(((row.one===0)&&(row.two===0)&&(row.three!==0)&&(row.four!==0))){\r\n        //  console.log('two phase распознал ситуацию как {0,0,x,x}')\r\n        if(row.three===row.four) {\r\n            thisAnimeRow = {\r\n                one: 0, two: 0, three: 0, four: 4\r\n            }\r\n        }else{\r\n            thisAnimeRow = {one: 0, two: 0, three: 0, four: 0}\r\n        }\r\n        //{0,x,0,x}\r\n    }else if((row.one===0)&&(row.two!==0)&&(row.three===0)&&(row.four!==0)){\r\n        //  console.log(' two phase распознал ситуацию как {0,x,0,x}')\r\n        if(row.two===row.four){\r\n            thisAnimeRow= {one: 0, two: 0, three: 0, four: 4}\r\n        }else{\r\n            thisAnimeRow= {one: 0, two: 0, three: 0, four: 0}\r\n        }\r\n        //{0,x,x,0}\r\n    }else if((row.one===0)&&(row.two!==0)&&(row.three !==0)&&(row.four===0)){\r\n        //  console.log('two phase распознал ситуацию как {0,x,x,0}')\r\n        if(row.two===row.three ){\r\n            //спорный вопрос как разрешить эту анимацию\r\n            thisAnimeRow= {one: 0, two: 0, three: 0, four: 4}\r\n        }else {\r\n            thisAnimeRow= {one: 0, two: 0, three: 0, four: 0}\r\n        }\r\n        //{0,x,x,x}\r\n    }else if((row.one===0)&&(row.two!==0)&&(row.three !==0)&&(row.four!==0)){\r\n        //  console.log('two phase распознал ситуацию как {0,x,x,x}')\r\n        if(row.three===row.four){\r\n            thisAnimeRow= {one: 0, two: 0, three: 0, four: 4}\r\n        }else if(row.two===row.three){\r\n            thisAnimeRow= {one: 0, two: 0, three: 4, four: 0}\r\n        }else{\r\n            thisAnimeRow= {one: 0, two: 0, three: 0, four: 0}\r\n        }\r\n        //{x,x,x,x}\r\n    } else {\r\n        //  console.log('two phase распознал ситуацию как {x,x,x,x}')\r\n        if((row.one===row.two)&&(row.three===row.four)){\r\n            thisAnimeRow = {one: 0, two: 0, three: 4, four: 4}\r\n        }else if(row.three===row.four){\r\n            thisAnimeRow = {one: 0, two: 0, three: 0, four: 4}\r\n        }else if(row.three===row.two){\r\n            thisAnimeRow = {one: 0, two: 0, three: 4, four: 0}\r\n        }\r\n        else if(row.two===row.one){\r\n            thisAnimeRow = {one: 0, two: 4, three: 0, four: 0}\r\n        }else{\r\n            thisAnimeRow = {one: 0, two: 0, three: 0, four: 0}\r\n        }\r\n    }\r\n    return thisAnimeRow\r\n}\r\n\r\n","// функция приминает матрицу oldAnimation и матрицу  oldMatrixValue\r\n// возвращает количество очков, которое нужно прибавить к новому стейту\r\nimport {getMassiveOnMatrix} from \"./logic\";\r\n\r\n\r\nexport let getScoreOfMatrixes=(newAnimationMatrix, oldMatrixValue)=> {\r\n    let massiveOldAnimation=getMassiveOnMatrix(newAnimationMatrix);\r\n    let massiveOldMatrixValue=getMassiveOnMatrix(oldMatrixValue);\r\n    let massiveOfDoubleTheValue=[]\r\n    massiveOldAnimation.forEach((value, index)=>{\r\n        if(value===4){\r\n            massiveOfDoubleTheValue.push(index)\r\n        }\r\n    })\r\n    let score=0;\r\n    massiveOfDoubleTheValue.forEach(x=>{\r\n        massiveOldMatrixValue.forEach((value, index)=>{\r\n            if(index===x){\r\n                score=score+(value*2)\r\n                    }\r\n                })\r\n    })\r\n    // console.log('score='+score)\r\n    return score\r\n}","import {shiftRowGetAnimationOnePhase, shiftRowGetAnimationTwoPhase} from './animationLogic';\r\nimport {getScoreOfMatrixes} from \"./getScoreOfMatrixes\";\r\n// основные элементы это 4 функции LEFT RIGHT UP DOWN\r\n// отдаем стейт, получаем измененный стейт\r\nexport let logicLeft = (matrix) => {\r\n    return null;\r\n}\r\n//матрица здесь- это объект из 4х строк(объект из 4х значений)\r\n//получить матрицу из стейта\r\nexport let getMatrixOnState = (state) => {\r\n    let matrix = {\r\n        oneRaw: {\r\n            one: state.oneRaw.one.value,\r\n            two: state.oneRaw.two.value,\r\n            three: state.oneRaw.three.value,\r\n            four: state.oneRaw.four.value\r\n        },\r\n        twoRaw: {\r\n            one: state.twoRaw.one.value,\r\n            two: state.twoRaw.two.value,\r\n            three: state.twoRaw.three.value,\r\n            four: state.twoRaw.four.value\r\n        },\r\n        threeRaw:\r\n            {\r\n                one: state.threeRaw.one.value,\r\n                two: state.threeRaw.two.value,\r\n                three: state.threeRaw.three.value,\r\n                four: state.threeRaw.four.value\r\n            }\r\n        , fourRaw:\r\n            {\r\n                one: state.fourRaw.one.value,\r\n                two: state.fourRaw.two.value,\r\n                three: state.fourRaw.three.value,\r\n                four: state.fourRaw.four.value\r\n            }\r\n    }\r\n    return matrix;\r\n\r\n}\r\n//полчить матрицу анимаций из стейта\r\nlet getAnimationMatrixOnState = (state) => {\r\n    let matrix = {\r\n        oneRaw: {\r\n            one: state.oneRaw.one.anime,\r\n            two: state.oneRaw.two.anime,\r\n            three: state.oneRaw.three.anime,\r\n            four: state.oneRaw.four.anime\r\n        },\r\n        twoRaw: {\r\n            one: state.twoRaw.one.anime,\r\n            two: state.twoRaw.two.anime,\r\n            three: state.twoRaw.three.anime,\r\n            four: state.twoRaw.four.anime\r\n        },\r\n        threeRaw:\r\n            {\r\n                one: state.threeRaw.one.anime,\r\n                two: state.threeRaw.two.anime,\r\n                three: state.threeRaw.three.anime,\r\n                four: state.threeRaw.four.anime\r\n            }\r\n        , fourRaw:\r\n            {\r\n                one: state.fourRaw.one.anime,\r\n                two: state.fourRaw.two.anime,\r\n                three: state.fourRaw.three.anime,\r\n                four: state.fourRaw.four.anime\r\n            }\r\n    }\r\n    return matrix\r\n}\r\n//сдвинуть строку\r\nexport let shiftRow = (row) => {\r\n    let thisRow = {\r\n        one: 0, two: 0, three: 0, four: 0\r\n    }\r\n    //{x,x,0,0}\r\n    if ((row.four === 0) && (row.three === 0)) {\r\n        thisRow = {\r\n            one: 0, two: 0, three: row.one, four: row.two\r\n        }\r\n        //    {0,x,x,0}\r\n    } else if ((row.two === 0) && (row.three === 0)) {\r\n        thisRow = {\r\n            one: 0, two: 0, three: row.one, four: row.four\r\n        }\r\n        // {0,x,0,x}\r\n    } else if ((row.two === 0) && (row.four === 0)) {\r\n        thisRow = {\r\n            one: 0, two: 0, three: row.one, four: row.three\r\n        }\r\n        //    {x,x,x,0}\r\n    } else if (row.four === 0) {\r\n        thisRow = {\r\n            one: 0, two: row.one, three: row.two, four: row.three\r\n        }\r\n        //    {x,x,0,x}\r\n    } else if (row.three === 0) {\r\n        thisRow = {\r\n            one: 0, two: row.one, three: row.two, four: row.four\r\n        }\r\n        //    {x,0,x,x}\r\n    } else if (row.two === 0) {\r\n        thisRow = {\r\n            one: 0, two: row.one, three: row.three, four: row.four\r\n        }\r\n    } else {\r\n        thisRow = {one: row.one, two: row.two, three: row.three, four: row.four}\r\n    }\r\n    return thisRow\r\n}\r\nexport let rowSlide = (row) => {\r\n    // console.log('input raw is')\r\n    // console.log(row)\r\n\r\n//Сдвиг элементов,  если есть нули\r\n\r\n    //Объявление исходного ВАРИАНТА(он же ОТВЕТ если никакие условия НЕ сработают)\r\n    let thisRow = shiftRow(row)\r\n    let returnedRow = {\r\n        one: thisRow.one,\r\n        two: thisRow.two,\r\n        three: thisRow.three,\r\n        four: thisRow.four\r\n    }\r\n    let compare2Num = (a, b) => {\r\n        if (b === 0) {\r\n            return {\r\n                a: 0, b: a\r\n            }\r\n        }\r\n        if (a === b) {\r\n            return {a: 0, b: a * 2}\r\n        } else\r\n            return {a: a, b: b}\r\n    }\r\n    let oneAndTwo = compare2Num(thisRow.one, thisRow.two)\r\n    let twoAndThree = compare2Num(thisRow.two, thisRow.three)\r\n    let threeAndFour = compare2Num(thisRow.three, thisRow.four)\r\n\r\n\r\n    //функция ПОПАРНОГО СРАВННЕНИЯ\r\n    let pairwiseComparison = (oneAndTwo, threeAndFour) => {\r\n        //Вариант когда результат содержит ноль посередине\r\n        if (threeAndFour.a === 0) {\r\n            returnedRow = {\r\n                one: 0, two: oneAndTwo.a, three: oneAndTwo.b, four: threeAndFour.b\r\n            }\r\n        } else {\r\n            //НЕ содежит НОЛЬ ПОСЕРЕДИНЕ\r\n            returnedRow = {\r\n                one: oneAndTwo.a, two: oneAndTwo.b, three: threeAndFour.a, four: threeAndFour.b\r\n            }\r\n        }\r\n        // console.log('парное')\r\n        // console.log(returnedRow)\r\n        return returnedRow\r\n    }\r\n    //для исключения ситуаций: input row is  {x:0;y:1;z:1;c:2}\r\n    //                         output row is {x:0;y:1;z:1;c:2}\r\n    let comparisonOfCentralMembers = (twoAndThree) => {\r\n        // console.log('по центральным')\r\n        if (twoAndThree.a === 0) {\r\n            returnedRow = {one: 0, two: thisRow.one, three: twoAndThree.b, four: thisRow.four}\r\n        } else {\r\n            returnedRow = {one: thisRow.one, two: twoAndThree.a, three: twoAndThree.b, four: thisRow.four}\r\n        }\r\n        // console.log(returnedRow)\r\n        return returnedRow\r\n    }\r\n    let result = ((thisRow.three !== thisRow.four) && thisRow.two === thisRow.three)\r\n        ? comparisonOfCentralMembers(twoAndThree) : pairwiseComparison(oneAndTwo, threeAndFour)\r\n\r\n    return result\r\n}\r\n// функция для тестирования   сдвига\r\nexport let testRowSlide = () => {\r\n    for (let x = 0; x < 2; x++) {\r\n        for (let y = 0; y < 2; y++) {\r\n            for (let z = 0; z < 2; z++) {\r\n                for (let c = 0; c < 2; c++) {\r\n                    let rowSlide1 = rowSlide({\r\n                        one: x,\r\n                        two: y,\r\n                        three: z,\r\n                        four: c\r\n                    })\r\n                    console.log('input row is {x:' + x + ';y:' + y + ';z:' + z + ';c:' + c + '} ' +\r\n                        ' output row is {x:' + rowSlide1.one + ';y:' + rowSlide1.two + ';z:'\r\n                        + rowSlide1.three + ';c:' + rowSlide1.four + '}')\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return \"test is completed!\"\r\n}\r\n//повороты матрицы для реализации нажатий кнопок\r\nlet getRightRowsOutMatrix = (matrix) => {\r\n    return matrix\r\n}\r\nexport let getLeftRowsOutMatrix = (matrix) => {\r\n    // console.log(matrix)\r\n    let leftMatrix = {\r\n        oneRaw: {\r\n            one: matrix.oneRaw.four,\r\n            two: matrix.oneRaw.three,\r\n            three: matrix.oneRaw.two,\r\n            four: matrix.oneRaw.one\r\n        },\r\n        twoRaw: {\r\n            one: matrix.twoRaw.four,\r\n            two: matrix.twoRaw.three,\r\n            three: matrix.twoRaw.two,\r\n            four: matrix.twoRaw.one\r\n        },\r\n        threeRaw: {\r\n            one: matrix.threeRaw.four,\r\n            two: matrix.threeRaw.three,\r\n            three: matrix.threeRaw.two,\r\n            four: matrix.threeRaw.one\r\n        },\r\n        fourRaw: {\r\n            one: matrix.fourRaw.four,\r\n            two: matrix.fourRaw.three,\r\n            three: matrix.fourRaw.two,\r\n            four: matrix.fourRaw.one\r\n\r\n        }\r\n    }\r\n    return leftMatrix\r\n}\r\nexport let getDownRowsOutMatrix = (matrix) => {\r\n    let downMatrix = {\r\n        oneRaw: {\r\n            one: matrix.oneRaw.one,\r\n            two: matrix.twoRaw.one,\r\n            three: matrix.threeRaw.one,\r\n            four: matrix.fourRaw.one\r\n        },\r\n        twoRaw: {\r\n            one: matrix.oneRaw.two,\r\n            two: matrix.twoRaw.two,\r\n            three: matrix.threeRaw.two,\r\n            four: matrix.fourRaw.two\r\n        },\r\n        threeRaw: {\r\n            one: matrix.oneRaw.three,\r\n            two: matrix.twoRaw.three,\r\n            three: matrix.threeRaw.three,\r\n            four: matrix.fourRaw.three\r\n        },\r\n        fourRaw: {\r\n            one: matrix.oneRaw.four,\r\n            two: matrix.twoRaw.four,\r\n            three: matrix.threeRaw.four,\r\n            four: matrix.fourRaw.four\r\n\r\n        }\r\n    }\r\n    return downMatrix\r\n}\r\nlet getUnDownRowsOutMatrix = (matrix) => {\r\n    let unDownMatrix = {\r\n        oneRaw: {\r\n            one: matrix.oneRaw.four,\r\n            two: matrix.twoRaw.four,\r\n            three: matrix.threeRaw.four,\r\n            four: matrix.fourRaw.four\r\n        },\r\n        twoRaw: {\r\n            one: matrix.oneRaw.three,\r\n            two: matrix.twoRaw.three,\r\n            three: matrix.threeRaw.three,\r\n            four: matrix.fourRaw.three\r\n        },\r\n        threeRaw: {\r\n            one: matrix.oneRaw.two,\r\n            two: matrix.twoRaw.two,\r\n            three: matrix.threeRaw.two,\r\n            four: matrix.fourRaw.two\r\n        },\r\n        fourRaw: {\r\n            one: matrix.oneRaw.one,\r\n            two: matrix.twoRaw.one,\r\n            three: matrix.threeRaw.one,\r\n            four: matrix.fourRaw.one\r\n        }\r\n    }\r\n    return unDownMatrix\r\n}\r\nexport let getUpRowsOutMatrix = (matrix) => {\r\n    let upMatrix = {\r\n        oneRaw: {\r\n            one: matrix.fourRaw.one,\r\n            two: matrix.threeRaw.one,\r\n            three: matrix.twoRaw.one,\r\n            four: matrix.oneRaw.one\r\n        },\r\n        twoRaw: {\r\n            one: matrix.fourRaw.two,\r\n            two: matrix.threeRaw.two,\r\n            three: matrix.twoRaw.two,\r\n            four: matrix.oneRaw.two\r\n        },\r\n        threeRaw: {\r\n            one: matrix.fourRaw.three,\r\n            two: matrix.threeRaw.three,\r\n            three: matrix.twoRaw.three,\r\n            four: matrix.oneRaw.three\r\n        },\r\n        fourRaw: {\r\n            one: matrix.fourRaw.four,\r\n            two: matrix.threeRaw.four,\r\n            three: matrix.twoRaw.four,\r\n            four: matrix.oneRaw.four\r\n\r\n        }\r\n    }\r\n    return upMatrix\r\n}\r\nlet getUnUpRowsOutMatrix = (matrix) => {\r\n    let unUpMatrix = {\r\n        oneRaw: {\r\n            one: matrix.oneRaw.one,\r\n            two: matrix.oneRaw.two,\r\n            three: matrix.oneRaw.three,\r\n            four: matrix.oneRaw.four\r\n        },\r\n        twoRaw: {\r\n            one: matrix.twoRaw.one,\r\n            two: matrix.twoRaw.two,\r\n            three: matrix.twoRaw.three,\r\n            four: matrix.twoRaw.four\r\n        },\r\n        threeRaw: {\r\n            one: matrix.threeRaw.one,\r\n            two: matrix.threeRaw.two,\r\n            three: matrix.threeRaw.three,\r\n            four: matrix.threeRaw.four\r\n        },\r\n        fourRaw: {\r\n            one: matrix.fourRaw.one,\r\n            two: matrix.fourRaw.two,\r\n            three: matrix.fourRaw.three,\r\n            four: matrix.fourRaw.four\r\n\r\n        }\r\n    }\r\n    return unUpMatrix\r\n}\r\nexport let RIGHT = (state) => {\r\n    //1)get matrix  on state:\r\n    let matrixOnState = getMatrixOnState(state);\r\n    //2)rotate on key\r\n    let rotateMatrix = getRightRowsOutMatrix(matrixOnState);\r\n    //3)slide all rows in matrix\r\n    //получить матрицу из анимаций текущей матрицы\r\n    let oldAnimationMatrix = {\r\n        oneRaw: shiftRowGetAnimationOnePhase(rotateMatrix.oneRaw),\r\n        twoRaw: shiftRowGetAnimationOnePhase(rotateMatrix.twoRaw),\r\n        threeRaw: shiftRowGetAnimationOnePhase(rotateMatrix.threeRaw),\r\n        fourRaw: shiftRowGetAnimationOnePhase(rotateMatrix.fourRaw)\r\n    }\r\n    //получить матрицу из анимаций ВТОРАЯ ФАЗА!!!\r\n    let newAnimationMatrix = {\r\n        oneRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.oneRaw),\r\n        twoRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.twoRaw),\r\n        threeRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.threeRaw),\r\n        fourRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.fourRaw)\r\n    }\r\n    //создать объект Текущая матрица + анимация ПЕРВЫЙ ОБЪЕКТ\r\n    let oldMatrixOldAnimation = {\r\n        oneRaw: {\r\n            one: {value: rotateMatrix.oneRaw.one, anime: oldAnimationMatrix.oneRaw.one},\r\n            two: {value: rotateMatrix.oneRaw.two, anime: oldAnimationMatrix.oneRaw.two},\r\n            three: {value: rotateMatrix.oneRaw.three, anime: oldAnimationMatrix.oneRaw.three},\r\n            four: {value: rotateMatrix.oneRaw.four, anime: oldAnimationMatrix.oneRaw.four}\r\n        },\r\n        twoRaw: {\r\n            one: {value: rotateMatrix.twoRaw.one, anime: oldAnimationMatrix.twoRaw.one},\r\n            two: {value: rotateMatrix.twoRaw.two, anime: oldAnimationMatrix.twoRaw.two},\r\n            three: {value: rotateMatrix.twoRaw.three, anime: oldAnimationMatrix.twoRaw.three},\r\n            four: {value: rotateMatrix.twoRaw.four, anime: oldAnimationMatrix.twoRaw.four}\r\n        },\r\n        threeRaw: {\r\n            one: {value: rotateMatrix.threeRaw.one, anime: oldAnimationMatrix.threeRaw.one},\r\n            two: {value: rotateMatrix.threeRaw.two, anime: oldAnimationMatrix.threeRaw.two},\r\n            three: {value: rotateMatrix.threeRaw.three, anime: oldAnimationMatrix.threeRaw.three},\r\n            four: {value: rotateMatrix.threeRaw.four, anime: oldAnimationMatrix.threeRaw.four}\r\n        },\r\n        fourRaw: {\r\n            one: {value: rotateMatrix.fourRaw.one, anime: oldAnimationMatrix.fourRaw.one},\r\n            two: {value: rotateMatrix.fourRaw.two, anime: oldAnimationMatrix.fourRaw.two},\r\n            three: {value: rotateMatrix.fourRaw.three, anime: oldAnimationMatrix.fourRaw.three},\r\n            four: {value: rotateMatrix.fourRaw.four, anime: oldAnimationMatrix.fourRaw.four}\r\n        }\r\n    }\r\n\r\n    //сдвинутая матрица\r\n    let slideRotateMatrix = {\r\n        oneRaw: rowSlide(rotateMatrix.oneRaw),\r\n        twoRaw: rowSlide(rotateMatrix.twoRaw),\r\n        threeRaw: rowSlide(rotateMatrix.threeRaw),\r\n        fourRaw: rowSlide(rotateMatrix.fourRaw)\r\n    }\r\n    //4) unRotateMatrix (повернули матрицу обратно)\r\n    let unRotateMatrix = slideRotateMatrix\r\n    //5) return state in parent\r\n    // создать объект новый стейт и новая анимация ВТОРОЙ ОБЪЕКТ\r\n    //аналог  gluingMatrix\r\n    let newMatrixNewAnimation = {\r\n        oneRaw: {\r\n            one: {value: unRotateMatrix.oneRaw.one, anime: newAnimationMatrix.oneRaw.one},\r\n            two: {value: unRotateMatrix.oneRaw.two, anime: newAnimationMatrix.oneRaw.two},\r\n            three: {value: unRotateMatrix.oneRaw.three, anime: newAnimationMatrix.oneRaw.three},\r\n            four: {value: unRotateMatrix.oneRaw.four, anime: newAnimationMatrix.oneRaw.four}\r\n        },\r\n        twoRaw: {\r\n            one: {value: unRotateMatrix.twoRaw.one, anime: newAnimationMatrix.twoRaw.one},\r\n            two: {value: unRotateMatrix.twoRaw.two, anime: newAnimationMatrix.twoRaw.two},\r\n            three: {value: unRotateMatrix.twoRaw.three, anime: newAnimationMatrix.twoRaw.three},\r\n            four: {value: unRotateMatrix.twoRaw.four, anime: newAnimationMatrix.twoRaw.four}\r\n        },\r\n        threeRaw: {\r\n            one: {value: unRotateMatrix.threeRaw.one, anime: newAnimationMatrix.threeRaw.one},\r\n            two: {value: unRotateMatrix.threeRaw.two, anime: newAnimationMatrix.threeRaw.two},\r\n            three: {value: unRotateMatrix.threeRaw.three, anime: newAnimationMatrix.threeRaw.three},\r\n            four: {value: unRotateMatrix.threeRaw.four, anime: newAnimationMatrix.threeRaw.four}\r\n        },\r\n        fourRaw: {\r\n            one: {value: unRotateMatrix.fourRaw.one, anime: newAnimationMatrix.fourRaw.one},\r\n            two: {value: unRotateMatrix.fourRaw.two, anime: newAnimationMatrix.fourRaw.two},\r\n            three: {value: unRotateMatrix.fourRaw.three, anime: newAnimationMatrix.fourRaw.three},\r\n            four: {value: unRotateMatrix.fourRaw.four, anime: newAnimationMatrix.fourRaw.four}\r\n        }\r\n    }\r\n    // добавим третьим объектом score  в возвращаемые объекты\r\n    let score = getScoreOfMatrixes(newAnimationMatrix, matrixOnState)\r\n    //\r\n    let newMatrixNewAnimationPlusNewPlayingPiece = addNewPlayingPiece(newMatrixNewAnimation)\r\n    //чтобы не добавлять лишнюю\r\n    let notAnimations = isNullAnimation(oldAnimationMatrix)\r\n    // console.log(oldAnimationMatrix)\r\n    // console.log('notAnimations is = '+ notAnimations)\r\n\r\n    return {\r\n        oneState: oldMatrixOldAnimation,\r\n        twoState: notAnimations ? newMatrixNewAnimation : newMatrixNewAnimationPlusNewPlayingPiece,\r\n        score: score\r\n    }\r\n}\r\nexport let LEFT = (state) => {\r\n    //1)get matrix  on state:\r\n    let matrixOnState = getMatrixOnState(state);\r\n    //2)rotate on key\r\n    let rotateMatrix = getLeftRowsOutMatrix(matrixOnState);\r\n    //получить матрицу анимаций СДВИГИ ВПРАВО\r\n    let oldAnimationMatrixRight = getLeftRowsOutMatrix({\r\n        oneRaw: shiftRowGetAnimationOnePhase(rotateMatrix.oneRaw),\r\n        twoRaw: shiftRowGetAnimationOnePhase(rotateMatrix.twoRaw),\r\n        threeRaw: shiftRowGetAnimationOnePhase(rotateMatrix.threeRaw),\r\n        fourRaw: shiftRowGetAnimationOnePhase(rotateMatrix.fourRaw)\r\n    })\r\n    let x = 5;\r\n    let oldAnimationMatrix = {\r\n        oneRaw: {\r\n            one: oldAnimationMatrixRight.oneRaw.one + x,\r\n            two: oldAnimationMatrixRight.oneRaw.two + x,\r\n            three: oldAnimationMatrixRight.oneRaw.three + x,\r\n            four: oldAnimationMatrixRight.oneRaw.four + x\r\n        },\r\n        twoRaw: {\r\n            one: oldAnimationMatrixRight.twoRaw.one + x,\r\n            two: oldAnimationMatrixRight.twoRaw.two + x,\r\n            three: oldAnimationMatrixRight.twoRaw.three + x,\r\n            four: oldAnimationMatrixRight.twoRaw.four + x\r\n        },\r\n        threeRaw: {\r\n            one: oldAnimationMatrixRight.threeRaw.one + x,\r\n            two: oldAnimationMatrixRight.threeRaw.two + x,\r\n            three: oldAnimationMatrixRight.threeRaw.three + x,\r\n            four: oldAnimationMatrixRight.threeRaw.four + x\r\n        },\r\n        fourRaw: {\r\n            one: oldAnimationMatrixRight.fourRaw.one + x,\r\n            two: oldAnimationMatrixRight.fourRaw.two + x,\r\n            three: oldAnimationMatrixRight.fourRaw.three + x,\r\n            four: oldAnimationMatrixRight.fourRaw.four + x\r\n        },\r\n    }\r\n    //анимация для второй фазы\r\n    let newAnimationMatrix = getLeftRowsOutMatrix({\r\n        oneRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.oneRaw),\r\n        twoRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.twoRaw),\r\n        threeRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.threeRaw),\r\n        fourRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.fourRaw)\r\n    })\r\n    // получить стейт для ПЕРВОЙ ФАЗЫ\r\n    let oldMatrixOldAnimation = gluingMatrix(matrixOnState, oldAnimationMatrix)\r\n    //3)slide all rows in matrix\r\n    //Сдвиг перевернутой матрицы\r\n    let slideRotateMatrix = {\r\n        oneRaw: rowSlide(rotateMatrix.oneRaw),\r\n        twoRaw: rowSlide(rotateMatrix.twoRaw),\r\n        threeRaw: rowSlide(rotateMatrix.threeRaw),\r\n        fourRaw: rowSlide(rotateMatrix.fourRaw)\r\n    }\r\n    //4) unRotateMatrix\r\n    // развернуть сдвинутую матрицу обратно 1для 2-ой фазы\r\n    let unRotateMatrix = getLeftRowsOutMatrix(slideRotateMatrix)\r\n    //5) return state in parent\r\n    //получить стейт для ВТОРОЙ ФАЗЫ\r\n    let newAnimationNewMatrix = gluingMatrix(unRotateMatrix, newAnimationMatrix)\r\n\r\n    let newMatrixNewAnimationPlusNewPlayingPiece = addNewPlayingPiece(newAnimationNewMatrix)\r\n    //чтобы не добавлять лишнюю\r\n    let notAnimations = isNullAnimation(oldAnimationMatrix)\r\n    // console.log(oldAnimationMatrix)\r\n    // console.log('notAnimations is = '+ notAnimations)\r\n\r\n    // добавим третьим объектом score  в возвращаемые объекты\r\n    let score = getScoreOfMatrixes(newAnimationMatrix, matrixOnState)\r\n    //\r\n    return {\r\n        oneState: oldMatrixOldAnimation,\r\n        twoState: notAnimations ? newAnimationNewMatrix : newMatrixNewAnimationPlusNewPlayingPiece,\r\n        score: score\r\n    }\r\n}\r\nexport let UP = (state) => {\r\n    //1)get matrix  on state:\r\n    let matrixOnState = getMatrixOnState(state);\r\n    //2)rotate on key\r\n    let rotateMatrix = getUpRowsOutMatrix(matrixOnState);\r\n    // получим матрицу анимаций для первой фазы:\r\n    let x = 9;\r\n    let oldAnimationMatrix =\r\n        getUnDownRowsOutMatrix({\r\n            oneRaw: Object.fromEntries(\r\n                Object.entries(shiftRowGetAnimationOnePhase(rotateMatrix.oneRaw))\r\n                    .map(([key, value]) => [key, value + x])\r\n            ),\r\n            twoRaw: Object.fromEntries(\r\n                Object.entries(shiftRowGetAnimationOnePhase(rotateMatrix.twoRaw))\r\n                    .map(([key, value]) => [key, value + x])\r\n            ),\r\n            threeRaw: Object.fromEntries(\r\n                Object.entries(shiftRowGetAnimationOnePhase(rotateMatrix.threeRaw))\r\n                    .map(([key, value]) => [key, value + x])\r\n            ),\r\n            fourRaw: Object.fromEntries(\r\n                Object.entries(shiftRowGetAnimationOnePhase(rotateMatrix.fourRaw))\r\n                    .map(([key, value]) => [key, value + x])\r\n            )\r\n        })\r\n    //готовый стейт для ПЕРВОЙ ФАЗЫ\r\n    let oldMatrixOldAnimation = gluingMatrix(matrixOnState, oldAnimationMatrix)\r\n    //3)slide all rows in matrix\r\n    // Получим матрицу новых анимаций\r\n    let newAnimationMatrix =\r\n        getUnDownRowsOutMatrix({\r\n            oneRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.oneRaw),\r\n            twoRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.twoRaw),\r\n            threeRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.threeRaw),\r\n            fourRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.fourRaw)\r\n        })\r\n    let slideRotateMatrix = {\r\n        oneRaw: rowSlide(rotateMatrix.oneRaw),\r\n        twoRaw: rowSlide(rotateMatrix.twoRaw),\r\n        threeRaw: rowSlide(rotateMatrix.threeRaw),\r\n        fourRaw: rowSlide(rotateMatrix.fourRaw)\r\n    }\r\n    //получим матрицу новых значений:\r\n    let newValuesMatrix = getUnDownRowsOutMatrix(slideRotateMatrix)\r\n    //Получим стейт для ВТОРОЙ ФАЗЫ\r\n    let newMatrixNewAnimation = gluingMatrix(newValuesMatrix, newAnimationMatrix)\r\n\r\n    let newMatrixNewAnimationPlusNewPlayingPiece = addNewPlayingPiece(newMatrixNewAnimation)\r\n    //чтобы не добавлять лишнюю\r\n    let notAnimations = isNullAnimation(oldAnimationMatrix)\r\n    // console.log(oldAnimationMatrix)\r\n    // console.log('notAnimations is = '+ notAnimations)\r\n\r\n    // добавим третьим объектом score  в возвращаемые объекты\r\n    let score = getScoreOfMatrixes(newAnimationMatrix, matrixOnState)\r\n    //\r\n\r\n    return {\r\n        oneState: oldMatrixOldAnimation,\r\n        twoState: notAnimations ? newMatrixNewAnimation : newMatrixNewAnimationPlusNewPlayingPiece,\r\n        score: score\r\n    }\r\n}\r\nexport let DOWN = (state) => {\r\n    //1)get matrix  on state:\r\n    let matrixOnState = getMatrixOnState(state);\r\n    //2)rotate on key\r\n    let rotateMatrix = getDownRowsOutMatrix(matrixOnState);\r\n    //3)slide all rows in matrix\r\n    //получим матрицу анимаций сдвигов\r\n    let x = 13\r\n    let oldAnimationMatrix = getUnUpRowsOutMatrix(getDownRowsOutMatrix({\r\n        oneRaw: Object.fromEntries(\r\n            Object.entries(shiftRowGetAnimationOnePhase(rotateMatrix.oneRaw))\r\n                .map(([key, value]) => [key, value + x])\r\n        ),\r\n        twoRaw: Object.fromEntries(\r\n            Object.entries(shiftRowGetAnimationOnePhase(rotateMatrix.twoRaw))\r\n                .map(([key, value]) => [key, value + x])\r\n        ),\r\n        threeRaw: Object.fromEntries(\r\n            Object.entries(shiftRowGetAnimationOnePhase(rotateMatrix.threeRaw))\r\n                .map(([key, value]) => [key, value + x])\r\n        ),\r\n        fourRaw: Object.fromEntries(\r\n            Object.entries(shiftRowGetAnimationOnePhase(rotateMatrix.fourRaw))\r\n                .map(([key, value]) => [key, value + x])\r\n        )\r\n    }))\r\n    //получим стейт ПЕРВОЙ ФАЗЫ\r\n    let oldMatrixOldAnimation = gluingMatrix(matrixOnState, oldAnimationMatrix)\r\n    let slideRotateMatrix = {\r\n        oneRaw: rowSlide(rotateMatrix.oneRaw),\r\n        twoRaw: rowSlide(rotateMatrix.twoRaw),\r\n        threeRaw: rowSlide(rotateMatrix.threeRaw),\r\n        fourRaw: rowSlide(rotateMatrix.fourRaw)\r\n    }\r\n    //4) unRotateMatrix\r\n    let unRotateMatrix = getDownRowsOutMatrix(slideRotateMatrix)\r\n    //5) return state in parent\r\n    // получим матрицу значений после преобразовния\r\n    let newValuesMatrix = getUnUpRowsOutMatrix(unRotateMatrix)\r\n    // получим матрицу анимаций после преобразования\r\n    let newAnimationMatrix = getUnUpRowsOutMatrix(getDownRowsOutMatrix(\r\n        {\r\n            oneRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.oneRaw),\r\n            twoRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.twoRaw),\r\n            threeRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.threeRaw),\r\n            fourRaw: shiftRowGetAnimationTwoPhase(rotateMatrix.fourRaw)\r\n        }\r\n    ))\r\n    //получим стей ВТОРОЙ ФАЗЫ\r\n    let newMatrixNewAnimation = gluingMatrix(newValuesMatrix, newAnimationMatrix)\r\n\r\n    let newMatrixNewAnimationPlusNewPlayingPiece = addNewPlayingPiece(newMatrixNewAnimation)\r\n    // чтобы не добалять лишнюю\r\n    let notAnimations = isNullAnimation(oldAnimationMatrix)\r\n    // console.log(oldAnimationMatrix)\r\n    // console.log('notAnimations is = '+ notAnimations)\r\n\r\n    // добавим третьим объектом score  в возвращаемые объекты\r\n    let score = getScoreOfMatrixes(newAnimationMatrix, matrixOnState)\r\n    //\r\n\r\n    return {\r\n        oneState: oldMatrixOldAnimation,\r\n        twoState: notAnimations ? newMatrixNewAnimation : newMatrixNewAnimationPlusNewPlayingPiece,\r\n        score: score\r\n    }\r\n}\r\n//склеиватель матрицы данных и матрицы анимаций\r\nlet gluingMatrix = (valMatrix, animeMatrix) => {\r\n    return {\r\n        oneRaw: {\r\n            one: {value: valMatrix.oneRaw.one, anime: animeMatrix.oneRaw.one},\r\n            two: {value: valMatrix.oneRaw.two, anime: animeMatrix.oneRaw.two},\r\n            three: {value: valMatrix.oneRaw.three, anime: animeMatrix.oneRaw.three},\r\n            four: {value: valMatrix.oneRaw.four, anime: animeMatrix.oneRaw.four}\r\n        },\r\n        twoRaw: {\r\n            one: {value: valMatrix.twoRaw.one, anime: animeMatrix.twoRaw.one},\r\n            two: {value: valMatrix.twoRaw.two, anime: animeMatrix.twoRaw.two},\r\n            three: {value: valMatrix.twoRaw.three, anime: animeMatrix.twoRaw.three},\r\n            four: {value: valMatrix.twoRaw.four, anime: animeMatrix.twoRaw.four}\r\n        },\r\n        threeRaw: {\r\n            one: {value: valMatrix.threeRaw.one, anime: animeMatrix.threeRaw.one},\r\n            two: {value: valMatrix.threeRaw.two, anime: animeMatrix.threeRaw.two},\r\n            three: {value: valMatrix.threeRaw.three, anime: animeMatrix.threeRaw.three},\r\n            four: {value: valMatrix.threeRaw.four, anime: animeMatrix.threeRaw.four}\r\n        },\r\n        fourRaw: {\r\n            one: {value: valMatrix.fourRaw.one, anime: animeMatrix.fourRaw.one},\r\n            two: {value: valMatrix.fourRaw.two, anime: animeMatrix.fourRaw.two},\r\n            three: {value: valMatrix.fourRaw.three, anime: animeMatrix.fourRaw.three},\r\n            four: {value: valMatrix.fourRaw.four, anime: animeMatrix.fourRaw.four}\r\n        }\r\n    }\r\n}\r\n//Для одобавлления новых плиток в процессе игры\r\n// возвращает измененный стейт\r\nexport let addNewPlayingPiece = (state) => {\r\n    //получить текущую матрицу\r\n    let currentMatrix = getMatrixOnState(state);\r\n    let getMatrixMassive = getMassiveOnMatrix(currentMatrix)\r\n    let matrixMassive = getMatrixMassive\r\n    //посчитаем все нули\r\n    let counter = 0;\r\n    let nullsIndexMassive = []\r\n    matrixMassive.forEach((currentValue, index) => {\r\n        if (currentValue === 0) {\r\n            nullsIndexMassive.push(index)\r\n            counter = counter + 1\r\n        }\r\n    })\r\n    //выберем случайное число от из нулей\r\n    let rndNull = Math.floor(Math.random() * Math.floor(counter))\r\n    //получим индекс случайной клетки которую будем увеличивать\r\n    let nullIndex = nullsIndexMassive[rndNull]\r\n    //  для того чтобы плитки были не только 2 но и 4  сделаем функуию которая н оснеове  rnd  вернет\r\n    // 2 или 4  в пропорции 1 к 9\r\n    let newX = () => {\r\n        let rand = Math.floor(1 + Math.random() * 10);\r\n        if (rand === 1) {\r\n            return 4\r\n        } else {\r\n            return 2\r\n        }\r\n    }\r\n    let x = newX()\r\n    //\r\n    // с учетом случайного числа создадим матрицу значений\r\n    matrixMassive[nullIndex] = matrixMassive[nullIndex] + x\r\n    let newValuesMatrix = getMatrixOnMassive(matrixMassive)\r\n    //создание измененной матрицы анимаций объекта\r\n    let oldAnimations = getAnimationMatrixOnState(state)\r\n    //полчим массив из матрицы анимаций\r\n    let animationsMatrixMassive = getMassiveOnMatrix(oldAnimations)\r\n    //заменим в массиве анимаций необходимое значение для чего\r\n    animationsMatrixMassive[nullIndex] = 44\r\n//    соберем обратно матрицу из массива\r\n    let newAnimationMatrix = getMatrixOnMassive(animationsMatrixMassive)\r\n    let returnedState = gluingMatrix(newValuesMatrix, newAnimationMatrix);\r\n    return returnedState\r\n}\r\n//общий метод получения массива из матрицы\r\nexport let getMassiveOnMatrix = (matrix) => {\r\n    let massive = [];\r\n    Object.entries(matrix.oneRaw)\r\n        .map(([key, value]) => massive.push(value))\r\n    Object.entries(matrix.twoRaw)\r\n        .map(([key, value]) => massive.push(value))\r\n    Object.entries(matrix.threeRaw)\r\n        .map(([key, value]) => massive.push(value))\r\n    Object.entries(matrix.fourRaw)\r\n        .map(([key, value]) => massive.push(value))\r\n    return massive\r\n}\r\n// общий метод для получения матрицы из  массива\r\nlet getMatrixOnMassive = (massive) => {\r\n    let oneRaw = [];\r\n    let twoRaw = [];\r\n    let threeRaw = [];\r\n    let fourRaw = []\r\n    massive.forEach(\r\n        (cV, index) => {\r\n            if (index <= 3) {\r\n                oneRaw.push(cV)\r\n            } else if (index <= 7) {\r\n                twoRaw.push(cV)\r\n            } else if (index <= 11) {\r\n                threeRaw.push(cV)\r\n            } else {\r\n                fourRaw.push(cV)\r\n            }\r\n        })\r\n    let shift = (massive) => {\r\n        let obj = {\r\n            one: massive[0],\r\n            two: massive[1],\r\n            three: massive[2],\r\n            four: massive[3],\r\n        }\r\n        return obj;\r\n    }\r\n    let returnedValuesMatrix = {\r\n        oneRaw: shift(oneRaw),\r\n        twoRaw: shift(twoRaw),\r\n        threeRaw: shift(threeRaw),\r\n        fourRaw: shift(fourRaw)\r\n    }\r\n    return returnedValuesMatrix\r\n}\r\n// вспомогательная матрица для проверки на отсутствие анимации\r\nlet isNullAnimation = (animationMatrix) => {\r\n    // let rights = {one: 0, two: 0, three: 0, four: 0};\r\n    // let downs = {one: , two: 0, three: 0, four: 0};\r\n    let massive = []\r\n    Object.entries(animationMatrix.oneRaw).map(([key, value]) =>\r\n        massive.push(value))\r\n    Object.entries(animationMatrix.twoRaw).map(([key, value]) =>\r\n        massive.push(value))\r\n    Object.entries(animationMatrix.threeRaw).map(([key, value]) =>\r\n        massive.push(value))\r\n    Object.entries(animationMatrix.fourRaw).map(([key, value]) =>\r\n        massive.push(value))\r\n    // console.log(massive)\r\n    let result = true\r\n    massive.forEach(x => {\r\n        if (!((x === 9) || (x === 0) || (x === 5) || (x === 13))) {\r\n            // console.log('не равно')\r\n            result = false\r\n        }\r\n    })\r\n    return result\r\n}\r\n","\r\nlet testMassive=()=>{\r\n    let massive=[]\r\n    for (let x = 0; x < 3; x++) {\r\n        for (let y = 0; y < 3; y++) {\r\n            for (let z = 0; z < 3; z++) {\r\n                for (let c = 0; c < 3; c++) {\r\n                    let rowSlide = {\r\n                        one: x*2,\r\n                        two: y*2,\r\n                        three: z*2,\r\n                        four: c*2\r\n                    }\r\n                   massive.push(rowSlide)\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return massive\r\n}\r\nexport default testMassive\r\n","import {\r\n    getDownRowsOutMatrix,\r\n    getLeftRowsOutMatrix,\r\n    getMassiveOnMatrix,\r\n    getMatrixOnState,\r\n    getUpRowsOutMatrix,\r\n} from \"./logic\";\r\n\r\nexport let youWin=(state)=>{\r\n    let isWinner=false\r\n    let matrixOnState= getMatrixOnState(state)\r\n    let massive=getMassiveOnMatrix(matrixOnState)\r\n    massive.forEach(x=>{\r\n        if(x===2048){\r\n            isWinner=true\r\n        }\r\n    })\r\n    return isWinner\r\n}\r\nlet gameOver = (state) => {\r\n    let  isGameOver=true\r\n    let matrixOfState = getMatrixOnState(state);\r\n    // console.log(matrixOfState)\r\n    let massiveR= getMassiveOnMatrix(matrixOfState)\r\n    // console.log(massiveR)\r\n    let massiveL=getMassiveOnMatrix(getLeftRowsOutMatrix(matrixOfState))\r\n    // console.log(massiveL)\r\n    let massiveU=getMassiveOnMatrix(getUpRowsOutMatrix(matrixOfState))\r\n    // console.log(massiveU)\r\n    let massiveD=getMassiveOnMatrix(getDownRowsOutMatrix(matrixOfState))\r\n    // console.log(massiveD)\r\n    massiveR.forEach(x=>{\r\n        if(x===0) {\r\n            // console.log('null in massiveR')\r\n            isGameOver=false\r\n        }\r\n    })\r\n    for (let j=0; j<=3; j++){\r\n    for (let i=1; i<=3; i++){\r\n        // console.log('in R')\r\n        // console.log(massiveR[(i+j*4)-1]+' Сравнили  с '+massiveR[(i+j*4)] )\r\n        if(massiveR[(i+j*4)-1]===massiveR[(i+j*4)]) {\r\n            isGameOver=false\r\n        }\r\n        }}\r\n    for (let j=0; j<=3; j++){\r\n    for (let i=1; i<=3; i++){\r\n        // console.log('in L')\r\n        // console.log(massiveL[(i+j*4)-1]+' Сравнили  с '+massiveL[(i+j*4)] )\r\n        if(massiveL[(i+j*4)-1]===massiveL[(i+j*4)]) {\r\n            isGameOver=false\r\n        }\r\n    }}\r\n    for (let j=0; j<=3; j++){\r\n    for (let i=1; i<=3; i++){\r\n        // console.log('in D')\r\n        // console.log(massiveD[(i+j*4)-1]+' Сравнили  с '+massiveD[(i+j*4)] )\r\n        if(massiveD[(i+j*4)-1]===massiveD[(i+j*4)]) {\r\n            isGameOver=false\r\n        }\r\n    }}\r\n    for (let j=0; j<=3; j++){\r\n    for (let i=1; i<=3; i++){\r\n        // console.log('in U')\r\n        // console.log(massiveU[(i+j*4)-1]+' Сравнили  с '+massiveU[(i+j*4)] )\r\n        if(massiveU[(i+j*4)-1]===massiveU[(i+j*4)]) {\r\n            isGameOver=false\r\n        }\r\n    }}\r\n\r\n    return isGameOver\r\n}\r\nexport default gameOver","import React from 'react'\r\nimport s from './LineInGame.module.css';\r\nimport GameFieldContainer from \"./gameField/GameFieldContainer\";\r\nimport {DOWN, LEFT, RIGHT, UP} from \"../redux/logic\";\r\nimport testMassive from \"./testMassive\";\r\nimport gameOver, {youWin} from \"../redux/gameOver\";\r\n\r\n\r\nclass LineInGame extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.startTicker = this.startTicker.bind(this);\r\n        this.magic = this.magic.bind(this);\r\n        this.setNewStateAndNewAnimation = this.setNewStateAndNewAnimation.bind(this)\r\n        this.setNullAnimation = this.setNullAnimation.bind(this)\r\n        this.keyFunction = this.keyFunction.bind(this);\r\n        this.setNewScore = this.setNewScore.bind(this);\r\n        this.setNewBestScore = this.setNewBestScore.bind(this);\r\n        this.state = {massive: testMassive(), step: true, pressingLock: false}\r\n        this.keyFunction = this.keyFunction.bind(this)\r\n    }\r\n    magicFunction(){\r\n        if (this.props.keys === 'left') {\r\n            this.magic(LEFT(this.props.main))\r\n        } else if (this.props.keys === 'right') {\r\n            this.magic(RIGHT(this.props.main))\r\n        } else if (this.props.keys === 'up') {\r\n            this.magic(UP(this.props.main))\r\n        } else if (this.props.keys === 'down') {\r\n            this.magic(DOWN(this.props.main))\r\n        }\r\n    }\r\n    keyFunction(event) {\r\n        if (!this.state.pressingLock) {\r\n            if (event.keyCode === 40) {\r\n                event.preventDefault()\r\n                this.setState({...this.state, pressingLock: true})\r\n                this.props.down()\r\n            } else if (event.keyCode === 38) {\r\n                event.preventDefault()\r\n                this.setState({...this.state, pressingLock: true})\r\n                this.props.up()\r\n            } else if (event.keyCode === 37) {\r\n                event.preventDefault()\r\n                this.setState({...this.state, pressingLock: true})\r\n                // console.log(Date.now()+'props.left()')\r\n                this.props.left()\r\n            } else if (event.keyCode === 39) {\r\n                event.preventDefault()\r\n                this.setState({...this.state, pressingLock: true})\r\n                this.props.right()\r\n            }else{\r\n                return\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        document.title = \"2048\";\r\n        document.addEventListener(\"keydown\", this.keyFunction, false);\r\n        // console.log(this.props)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.keyFunction, false);\r\n        this.props.setNull()\r\n\r\n    }\r\n\r\n    //1)  в порядке отработки\r\n    startTicker() {\r\n        this.ticker = setInterval(this.magic, 650)\r\n    }\r\n\r\n    magic(twoStates) {\r\n        let States = twoStates\r\n        let oneState = States.oneState\r\n        let twoState = States.twoState\r\n        let score = States.score\r\n        this.setNullAnimation()\r\n        setTimeout(() => this.setCurrentValueAndSlideAnimation(oneState), 20)\r\n        setTimeout(() => this.setNewStateAndNewAnimation(twoState), 200)\r\n        setTimeout(() => this.setNullAnimation(), 220)\r\n        setTimeout(() => this.setNewStateAndNewAnimation(twoState), 240)\r\n        setTimeout(() => this.setNullAnimation(), 320)\r\n        setTimeout(() => this.setState({...this.state, pressingLock: false}), 300)\r\n        setTimeout(()=>this.setNewScore(score), 300)\r\n        setTimeout(()=>this.setNewBestScore(score), 290)\r\n    }\r\n\r\n    setNullAnimation() {\r\n        this.props.resetAnimation()\r\n    }\r\n\r\n    setNewScore(score) {\r\n        let nS= {...this.props.main,score: this.props.main.score+score}\r\n        this.props.setCurrentState(nS)\r\n    }\r\n    setNewBestScore(score) {\r\n        if(score){\r\n            localStorage.setItem('main',JSON.stringify(this.props.main))\r\n        }\r\n        if (this.props.main.bestScore<this.props.main.score+score){\r\n            localStorage.setItem('bestScore', this.props.main.score+score)\r\n            this.props.setCurrentState({...this.props.main, bestScore: this.props.main.score+score})\r\n\r\n        }\r\n\r\n    }\r\n    setCurrentValueAndSlideAnimation(next) {\r\n        this.props.setCurrentState(\r\n            {...this.props.main, ...next}\r\n        )\r\n    }\r\n\r\n    setNewStateAndNewAnimation(next) {\r\n        this.props.setCurrentState(\r\n            {...this.props.main, ...next}\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (<div>\r\n                {this.magicFunction()}\r\n                <div className={s.b}>\r\n                    <div className={s.head}>\r\n                        <span><button className={s.button} onClick={this.props.reset}>NEW GAME</button></span>\r\n                        <span><b className={s.bb}>score</b><input className={s.input} readOnly={true} value={this.props.main.score}/></span>\r\n                        <span><b className={s.bb}>best score</b><input className={s.input} readOnly={true} value={this.props.main.bestScore}/></span>\r\n                    </div>\r\n                    <GameFieldContainer/>\r\n                    {/*{console.log('gameOver is= '+gameOver(this.props.main))}*/}\r\n                    <div className={gameOver(this.props.main) ? s.footer2 : s.footer}>GAME OVER</div>\r\n                    <div className={youWin(this.props.main) ? s.winner2 : s.winner}>YOU WIN!!!</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineInGame","import LineInGame from \"./LineInGame\";\r\nimport {connect} from \"react-redux\";\r\nimport {ACResetAnimation, ACResetState, ACSetCurrentState} from \"../redux/mainReducer\";\r\nimport {\r\n    actionCreatorAddScore,\r\n    actionCreatorDown,\r\n    actionCreatorLeft,\r\n    actionCreatorNull,\r\n    actionCreatorRight,\r\n    actionCreatorUP\r\n} from \"../redux/keyPressReducer\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        main: state.main,\r\n        keys: state.keysState.key,\r\n        score: state.keysState.score\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        reset :()=>dispatch(ACResetState()),\r\n        resetAnimation: ()=>dispatch(ACResetAnimation()),\r\n        setCurrentState: (newState)=>dispatch(ACSetCurrentState(newState)),\r\n        left:()=>dispatch(actionCreatorLeft()),\r\n        right:()=>dispatch(actionCreatorRight()),\r\n        up:()=>dispatch(actionCreatorUP()),\r\n        down:()=>dispatch(actionCreatorDown()),\r\n        setNull:()=>dispatch(actionCreatorNull()),\r\n        setScore:(score)=>dispatch(actionCreatorAddScore(score))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LineInGame)","import {useEffect, useRef} from \"react\";\r\nimport LineInGameContainer from \"./components/LineInGameContainer\";\r\nimport s from './App.module.css';\r\nimport React from 'react'\r\n\r\n\r\nconst App = (props) => {\r\n    const canvasRef = useRef(null);\r\n    const msgBoxRef = useRef(null);\r\n    useEffect(() => {\r\n\r\n\r\n//Чувствительность — количество пикселей, после которого жест будет считаться свайпом\r\n            const sensitivity = 20;\r\n\r\n//Получение поля, в котором будут выводиться сообщения\r\n            const msgBox = msgBoxRef.current;\r\n\r\n            let touchStart = null; //Точка начала касания\r\n            let touchPosition = null; //Текущая позиция\r\n\r\n\r\n//        постановка общего слушателя на  document\r\n\r\n            //Перехватываем события\r\n            document.addEventListener(\"touchstart\", function (e) {\r\n                TouchStart(e);\r\n            }); //Начало касания\r\n            document.addEventListener(\"touchmove\", function (e) {\r\n                TouchMove(e);\r\n            }); //Движение пальцем по экрану\r\n//Пользователь отпустил экран\r\n            document.addEventListener(\"touchend\", function (e) {\r\n                TouchEnd(e, \"green\");\r\n            });\r\n\r\n\r\n            function TouchStart(e) {\r\n                //Получаем текущую позицию касания\r\n                // console.log('touchstart')\r\n                touchStart = {x: e.changedTouches[0].clientX, y: e.changedTouches[0].clientY};\r\n                touchPosition = {x: touchStart.x, y: touchStart.y};\r\n            }\r\n\r\n            function TouchMove(e) {\r\n                //Получаем новую позицию\r\n                // console.log('touchmove')\r\n                e.preventDefault()\r\n                touchPosition = {x: e.changedTouches[0].clientX, y: e.changedTouches[0].clientY};\r\n            }\r\n\r\n            function TouchEnd(e, color) {\r\n\r\n                // console.log('touchend')\r\n                CheckAction(); //Определяем, какой жест совершил пользователь\r\n\r\n                //Очищаем позиции\r\n                touchStart = null;\r\n                touchPosition = null;\r\n            }\r\n\r\n            function CheckAction() {\r\n                // console.log('checkAction')\r\n                let d = ()=> {//Получаем расстояния от начальной до конечной точек по обеим осям\r\n                    if (touchStart && touchPosition) {\r\n                       return {\r\n                           x: touchStart.x - touchPosition.x,\r\n                           y:touchStart.y - touchPosition.y\r\n                       }\r\n                    }else{\r\n                        return {\r\n                            x:0, y: 0\r\n                        }\r\n                    }\r\n                }\r\n                let msg = \"\"; //Сообщение\r\n\r\n                if (Math.abs(d().x) > Math.abs(d().y)) //Проверяем, движение по какой оси было длиннее\r\n                {\r\n                    if (Math.abs(d().x) > sensitivity) //Проверяем, было ли движение достаточно длинным\r\n                    {\r\n                        if (d().x > 0) //Если значение больше нуля, значит пользователь двигал пальцем справа налево\r\n                        {\r\n                            msg = \"Swipe Left\";\r\n                            props.left()\r\n                        } else //Иначе он двигал им слева направо\r\n                        {\r\n                            msg = \"Swipe Right\";\r\n                            props.right()\r\n                        }\r\n                    }\r\n                } else //Аналогичные проверки для вертикальной оси\r\n                {\r\n                    if (Math.abs(d().y) > sensitivity) {\r\n                        if (d().y > 0) //Свайп вверх\r\n                        {\r\n                            msg = \"Swipe up\";\r\n                            props.up()\r\n                        } else //Свайп вниз\r\n                        {\r\n                            msg = \"Swipe down\";\r\n                            props.down()\r\n                        }\r\n                    }\r\n                }\r\n\r\n                msgBox.innerText = msg; //Выводим сообщение\r\n\r\n            }\r\n\r\n            let ret = () => {\r\n                document.removeEventListener(\"touchstart\", function (e) {\r\n                    TouchStart(e);\r\n                });\r\n                //Начало касания\r\n                document.removeEventListener(\"touchmove\", function (e) {\r\n                    TouchMove(e);\r\n                });\r\n                //Движение пальцем по экрану\r\n                //Пользователь отпустил экран\r\n                document.removeEventListener(\"touchend\", function (e) {\r\n                    TouchEnd(e);\r\n                });\r\n            }\r\n            return ret()\r\n        }\r\n    )\r\n    return (<div>\r\n        <canvas ref={canvasRef} className={s.canvas} style={{overflowY: 'hidden' }}></canvas>\r\n        <LineInGameContainer/>\r\n        <span ref={msgBoxRef}></span>\r\n    </div>);\r\n}\r\nexport default App;\r\n","import App from \"./App\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreatorDown, actionCreatorLeft, actionCreatorRight, actionCreatorUP} from \"./redux/keyPressReducer\";\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        left:()=>dispatch(actionCreatorLeft()),\r\n        right:()=>dispatch(actionCreatorRight()),\r\n        up:()=>dispatch(actionCreatorUP()),\r\n        down:()=>dispatch(actionCreatorDown()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport AppC from \"./AppC\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n    <AppC />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"b\":\"LineInGame_b__2ztLd\",\"head\":\"LineInGame_head__21YHD\",\"bodyField\":\"LineInGame_bodyField__HBsS7\",\"bodyField2\":\"LineInGame_bodyField2__2Bi_O\",\"footer\":\"LineInGame_footer__2g7ex\",\"footer2\":\"LineInGame_footer2__3xRxK\",\"rowStyle\":\"LineInGame_rowStyle__2crDb\",\"cellStyle\":\"LineInGame_cellStyle__gpRua\",\"p\":\"LineInGame_p__B5dkM\",\"button\":\"LineInGame_button__2uKeq\",\"winner\":\"LineInGame_winner__2RJHI\",\"winner2\":\"LineInGame_winner2__3JOsa\",\"input\":\"LineInGame_input__1ERME\",\"bb\":\"LineInGame_bb__2cxtf\"};"],"sourceRoot":""}